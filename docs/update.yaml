Updates the details (name, permissions, facial data) of an existing user
---
put:
  summary: "Update the details of an existing user"
  description: "Updates the details (name, permissions, facial data) of an existing user."
  tags:
    - Update
  security:
    - ApiKeyAuth: []
  parameters:
    - in: header
      name: Authorization
      type: string
      required: true
      description: "API key needed to authorize requests."
    - in: path
      name: user_id
      type: integer
      required: true
      description: "The ID of the user to update."
    - in: formData
      name: name
      type: string
      required: false
      description: "The new name of the user."
    - in: formData
      name: permission
      type: array
      items:
        type: string
      required: false
      description: "New permissions for the user."
    - in: formData
      name: image
      type: file
      required: false
      description: "New facial image for the user."
responses:
  '200':
    description: "User updated successfully."
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
              example: "User 1 updated successfully."
  '400':
    description: "Bad request due to invalid input."
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
              example1: "Invalid permission level."
              example2: "permissions needed to be a list."
              example3: "Numbers and special characters are not allowed in name."
              example4: "Invalid permission level: XXX. Use valid permission levels: ['superadmin', 'admin', 'manager', ..]."
              example5: "File type: pdf is not allowed. Allowed types are: png, jpg, jpeg."
              example6: "No image file/files provided."
  '404':
    description: "User not found."
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
              example: "User 1 not found."
  '500':
    description: "Server error."
    content:
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
              example: "An error occurred {error}."
